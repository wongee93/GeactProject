{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;AAAA,IAAMA,KAAK,GAAG;EACVC,aAAa,EAAbA,aAAa;EACbC,MAAM,EAANA;AACJ,CAAC;AAED,SAASD,aAAa,CAACE,IAAY,EAAEC,KAAa,EAAsB;EAAA,kCAAjBC,QAAQ;IAARA,QAAQ;EAAA;EAC3D,IAAMC,aAAa,GAAGC,KAAK,CAACC,OAAO,CAACH,QAAQ,CAAC,GAAGA,QAAQ,GAAG,CAACA,QAAQ,CAAC;EACrE,OAAO;IACHF,IAAI,EAAJA,IAAI;IACJC,KAAK,kCACEA,KAAK;MACRC,QAAQ,EAAEC,aAAa,CAACG,GAAG,CAAC,UAACC,KAAU,EAAK;QACxC,OACI,QAAOA,KAAK,MAAK,QAAQ,GACnBA,KAAK,GACLC,iBAAiB,CAACD,KAAK,CAAC;MAEtC,CAAC;IAAC;EAEV,CAAC;AACL;AAEA,SAASC,iBAAiB,CAACC,IAAY,EAAE;EACrC,OAAO;IACHT,IAAI,EAAE,aAAa;IACnBC,KAAK,EAAE;MACHS,SAAS,EAAED,IAAI;MACfP,QAAQ,EAAE;IACd;EACJ,CAAC;AACL;AAEA,SAASH,MAAM,CAACY,OAAY,EAAEC,SAAc,EAAE;EAC1C,IAAMC,GAAG,GAAGF,OAAO,CAACX,IAAI,KAAK,aAAa,GACpCc,QAAQ,CAACC,cAAc,CAAC,EAAE,CAAC,GAC3BD,QAAQ,CAAChB,aAAa,CAACa,OAAO,CAACX,IAAI,CAAC;EAE1C,IAAMgB,UAAU,GAAG,SAAbA,UAAU,CAAIC,GAAQ;IAAA,OAAKA,GAAG,KAAK,UAAU;EAAA;EACnDC,MAAM,CAACC,IAAI,CAACR,OAAO,CAACV,KAAK,CAAC,CACrBmB,MAAM,CAACJ,UAAU,CAAC,CAClBK,OAAO,CAAC,UAAAC,IAAI,EAAI;IACb,IAAIA,IAAI,KAAK,OAAO,EAAE;MAClBJ,MAAM,CAACK,MAAM,CAACV,GAAG,CAACW,KAAK,EAAEb,OAAO,CAACV,KAAK,CAACqB,IAAI,CAAC,CAAC;IACjD,CAAC,MAAM;MACHT,GAAG,CAACS,IAAI,CAAC,GAAGX,OAAO,CAACV,KAAK,CAACqB,IAAI,CAAC;IACnC;EACJ,CAAC,CAAC;EAENX,OAAO,CAACV,KAAK,CAACC,QAAQ,CAACmB,OAAO,CAAC,UAACd,KAAU;IAAA,OACtCR,MAAM,CAACQ,KAAK,EAAEM,GAAG,CAAC;EAAA,EACrB;EAEDD,SAAS,CAACa,WAAW,CAACZ,GAAG,CAAC;AAC9B;;AAEA;AACA,IAAMF,OAAO,GACT;EAAK,KAAK,EAAE;IAAEe,UAAU,EAAE;EAAS;AAAE,GACjC,gCAAI,aAAW,CAAK,EACpB;EAAI,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAQ;AAAE,GAAE,cAAY,CAAK,CAE5D;AACD,IAAMf,SAAS,GAAGE,QAAQ,CAACc,cAAc,CAAC,MAAM,CAAC;AACjD/B,KAAK,CAACE,MAAM,CAACY,OAAO,EAAEC,SAAS,CAAC,C","sources":["webpack://geactproject/./src/index.tsx"],"sourcesContent":["const Geact = {\n    createElement,\n    render\n}\n\nfunction createElement(type: string, props: object, ...children: any[]) {\n    const childrenArray = Array.isArray(children) ? children : [children];\n    return {\n        type,\n        props: {\n            ...props,\n            children: childrenArray.map((child: any) => {\n                return (\n                    typeof child === \"object\"\n                        ? child\n                        : createTextElement(child)\n                )\n            })\n        }\n    }\n}\n\nfunction createTextElement(text: string) {\n    return {\n        type: \"TextElement\",\n        props: {\n            nodeValue: text,\n            children: []\n        }\n    }\n}\n\nfunction render(element: any, container: any) {\n    const dom = element.type === \"TextElement\"\n        ? document.createTextNode(\"\")\n        : document.createElement(element.type)\n\n    const isProperty = (key: any) => key !== \"children\"\n    Object.keys(element.props)\n        .filter(isProperty)\n        .forEach(name => {\n            if (name === 'style') {\n                Object.assign(dom.style, element.props[name])\n            } else {\n                dom[name] = element.props[name]\n            }\n        })\n\n    element.props.children.forEach((child: any) =>\n        render(child, dom)\n    )\n\n    container.appendChild(dom)\n}\n\n/** @jsx Geact.createElement */\nconst element = (\n    <div style={{ background: 'salmon' }} >\n        <h1>Hello World</h1>\n        <h2 style={{ textAlign: 'right' }} > from Geact </h2>\n    </div>\n);\nconst container = document.getElementById(\"root\");\nGeact.render(element, container);\n"],"names":["Geact","createElement","render","type","props","children","childrenArray","Array","isArray","map","child","createTextElement","text","nodeValue","element","container","dom","document","createTextNode","isProperty","key","Object","keys","filter","forEach","name","assign","style","appendChild","background","textAlign","getElementById"],"sourceRoot":""}