{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;AAAA,IAAMA,KAAK,GAAG;EACVC,aAAa,EAAbA,aAAa;EACbC,MAAM,EAANA;AACJ,CAAC;AAED,SAASD,aAAa,CAACE,IAAY,EAAEC,KAAa,EAAEC,QAAe,EAAE;EACjE,OAAO;IACHF,IAAI,EAAJA,IAAI;IACJC,KAAK,kCACEA,KAAK;MACRC,QAAQ,EAAEA,QAAQ,CAACC,GAAG,CAAC,UAACC,KAAU,EAAK;QACnC,QAAOA,KAAK,MAAK,QAAQ,GAAGA,KAAK,GAAGC,iBAAiB,CAACD,KAAK,CAAC;MAChE,CAAC;IAAC;EAEV,CAAC;AACL;AAEA,SAASC,iBAAiB,CAACC,IAAY,EAAE;EACrC,OAAO;IACHN,IAAI,EAAE,aAAa;IACnBC,KAAK,EAAE;MACHM,KAAK,EAAED,IAAI;MACXJ,QAAQ,EAAE;IACd;EACJ,CAAC;AACL;AAEA,SAASH,MAAM,CAACS,OAAY,EAAEC,SAAc,EAAE;EAC1C,IAAMC,GAAG,GAAGF,OAAO,CAACR,IAAI,KAAK,aAAa,GACpCW,QAAQ,CAACC,cAAc,CAAC,EAAE,CAAC,GAC3BD,QAAQ,CAACb,aAAa,CAACU,OAAO,CAACR,IAAI,CAAC;EAE1C,IAAMa,UAAU,GAAG,SAAbA,UAAU,CAAIC,GAAQ;IAAA,OAAKA,GAAG,KAAK,UAAU;EAAA;EACnDC,MAAM,CAACC,IAAI,CAACR,OAAO,CAACP,KAAK,CAAC,CACrBgB,MAAM,CAACJ,UAAU,CAAC,CAClBK,OAAO,CAAC,UAAAC,IAAI,EAAI;IACbT,GAAG,CAACU,YAAY,CAACD,IAAI,EAAEX,OAAO,CAACP,KAAK,CAACkB,IAAI,CAAC,CAAC;EAC/C,CAAC,CAAC;EAENX,OAAO,CAACP,KAAK,CAACC,QAAQ,CAACgB,OAAO,CAAC,UAACd,KAAU;IAAA,OACtCL,MAAM,CAACK,KAAK,EAAEM,GAAG,CAAC;EAAA,EACrB;EAEDD,SAAS,CAACY,WAAW,CAACX,GAAG,CAAC;AAC9B;;AAGA;AACA,IAAMF,OAAO,GACT;EAAK,KAAK,EAAE;IAAEc,UAAU,EAAE;EAAS;AAAE,GACjC,gCAAI,aAAW,CAAK,EACpB;EAAI,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAQ;AAAE,GAAE,cAAY,CAAK,CAE5D;AACD,IAAMd,SAAS,GAAGE,QAAQ,CAACa,cAAc,CAAC,MAAM,CAAC;AACjD3B,KAAK,CAACE,MAAM,CAACS,OAAO,EAAEC,SAAS,CAAC,C","sources":["webpack://geactproject/./src/index.tsx"],"sourcesContent":["const Geact = {\n    createElement,\n    render\n}\n\nfunction createElement(type: string, props: object, children: any[]) {\n    return {\n        type,\n        props: {\n            ...props,\n            children: children.map((child: any) => {\n                typeof child === \"object\" ? child : createTextElement(child)\n            })\n        }\n    }\n}\n\nfunction createTextElement(text: string) {\n    return {\n        type: \"TextElement\",\n        props: {\n            value: text,\n            children: []\n        }\n    }\n}\n\nfunction render(element: any, container: any) {\n    const dom = element.type === \"TextElement\"\n        ? document.createTextNode(\"\")\n        : document.createElement(element.type)\n\n    const isProperty = (key: any) => key !== \"children\"\n    Object.keys(element.props)\n        .filter(isProperty)\n        .forEach(name => {\n            dom.setAttribute(name, element.props[name])\n        })\n\n    element.props.children.forEach((child: any) =>\n        render(child, dom)\n    )\n\n    container.appendChild(dom)\n}\n\n\n/** @jsx Geact.createElement */\nconst element = (\n    <div style={{ background: 'salmon' }} >\n        <h1>Hello World</h1>\n        <h2 style={{ textAlign: 'right' }} > from Geact </h2>\n    </div>\n);\nconst container = document.getElementById(\"root\");\nGeact.render(element, container);"],"names":["Geact","createElement","render","type","props","children","map","child","createTextElement","text","value","element","container","dom","document","createTextNode","isProperty","key","Object","keys","filter","forEach","name","setAttribute","appendChild","background","textAlign","getElementById"],"sourceRoot":""}